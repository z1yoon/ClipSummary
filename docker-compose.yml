version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: always

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
    depends_on:
      - frontend
      - backend
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - backend-uploads:/app/uploads
      - backend-cache:/app/cache
      - ./models:/app/.cache/huggingface
    environment:
      - PYTHONUNBUFFERED=1
      - YOUTUBE_API_KEY=${YOUTUBE_API_KEY}
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://clipsummary:clipsummary@postgres:5432/clipsummary
      - SECRET_KEY=${SECRET_KEY:-mysecretkey}
      - JWT_SECRET=${JWT_SECRET:-jwtsecretkey}
      - JWT_ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - MAX_UPLOAD_SIZE=10737418240
      - WHISPERX_DEVICE=${WHISPERX_DEVICE:-cuda}
      - TRANSFORMERS_CACHE=/app/.cache/huggingface
      - HF_HOME=/app/.cache/huggingface
      - TRANSFORMERS_OFFLINE=0  # Allow downloading if needed
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512  # Prevent CUDA OOM errors
      - CUDA_VISIBLE_DEVICES=0  # Use first GPU
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu, compute, utility]

  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:13
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=clipsummary
      - POSTGRES_USER=clipsummary
      - POSTGRES_DB=clipsummary
    ports:
      - "5432:5432"
    restart: always

volumes:
  redis-data:
  postgres-data:
  backend-uploads:
  backend-cache: