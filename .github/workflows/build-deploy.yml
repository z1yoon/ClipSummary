name: Build and Deploy

on:
  push:
    branches: [ main, enhancement1 ]
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/enhancement1'    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Tailscale
        uses: tailscale/github-action@v2
        with:
          authkey: ${{ secrets.TAILSCALE_KEY }}
          tags: tag:github-runner
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_SSH_KEY }}
      
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo -e "Host ${{ secrets.TAILSCALE_SERVER_IP }}\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
          chmod 600 ~/.ssh/config
      
      - name: Deploy to server
        env:
          BRANCH_NAME: ${{ github.ref_name }}
        run: |
          # Wait for Tailscale connection to be established
          echo "Waiting for Tailscale connection to be established..."
          sleep 10
          
          # Check Tailscale status
          tailscale status
          
          # SSH into server using Tailscale IP
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.TAILSCALE_SERVER_IP }} "bash -s" << 'ENDSSH'
            # Go to the deploy directory
            cd ${{ secrets.DEPLOY_DIR }}
            
            # If git repo doesn't exist, clone it
            if [ ! -d ".git" ]; then
              echo "Cloning repository..."
              git clone ${{ github.server_url }}/${{ github.repository }} .
            fi
            
            # Checkout and pull the latest code from the branch
            git fetch --all
            git checkout ${BRANCH_NAME}
            git pull origin ${BRANCH_NAME}
             
            # Build and run with docker-compose
            echo "Building and starting containers with docker-compose..."
            docker-compose build
            #docker-compose up -d
            
            # Wait for services to be up
            sleep 10
            
            # Show running containers
            docker-compose ps
            #docker-compose logs --tail=30
          ENDSSH